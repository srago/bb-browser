load("@com_github_buildbarn_bb_storage//tools:container.bzl", "container_push_official")
load("@io_bazel_rules_docker//go:image.bzl", "go_image")
load("@io_bazel_rules_go//go:def.bzl", "go_binary", "go_library")

go_library(
    name = "bb_browser_lib",
    srcs = [
        "browser_service.go",
        "main.go",
    ],
    embedsrcs = [
        "favicon.png",
        "stylesheet.css",
        "templates/error.html",
        "templates/footer.html",
        "templates/header.html",
        "templates/page_action.html",
        "templates/page_command.html",
        "templates/page_directory.html",
        "templates/page_previous_execution_stats.html",
        "templates/page_tree.html",
        "templates/page_welcome.html",
        "templates/view_action_timestamp_delta.html",
        "templates/view_arguments.html",
        "templates/view_command.html",
        "templates/view_directory.html",
        "templates/view_log.html",
        "templates/view_previous_execution_stats.html",
    ],
    importpath = "github.com/buildbarn/bb-browser/cmd/bb_browser",
    visibility = ["//visibility:private"],
    deps = [
        "//pkg/proto/configuration/bb_browser",
        "@com_github_bazelbuild_remote_apis//build/bazel/remote/execution/v2:execution",
        "@com_github_buildbarn_bb_remote_execution//pkg/proto/resourceusage",
        "@com_github_buildbarn_bb_storage//pkg/auth",
        "@com_github_buildbarn_bb_storage//pkg/blobstore",
        "@com_github_buildbarn_bb_storage//pkg/blobstore/configuration",
        "@com_github_buildbarn_bb_storage//pkg/digest",
        "@com_github_buildbarn_bb_storage//pkg/filesystem/path",
        "@com_github_buildbarn_bb_storage//pkg/global",
        "@com_github_buildbarn_bb_storage//pkg/http",
        "@com_github_buildbarn_bb_storage//pkg/proto/cas",
        "@com_github_buildbarn_bb_storage//pkg/proto/iscc",
        "@com_github_buildbarn_bb_storage//pkg/util",
        "@com_github_buildkite_terminal_to_html//:terminal-to-html",
        "@com_github_dustin_go_humanize//:go-humanize",
        "@com_github_gorilla_mux//:mux",
        "@com_github_kballard_go_shellquote//:go-shellquote",
        "@com_github_spiffe_go_spiffe_v2//svid/x509svid",
        "@org_golang_google_grpc//codes",
        "@org_golang_google_grpc//metadata",
        "@org_golang_google_grpc//status",
        "@org_golang_google_protobuf//proto",
        "@org_golang_google_protobuf//types/known/anypb",
        "@org_golang_google_protobuf//types/known/timestamppb",
        "@org_gonum_v1_plot//:plot",
        "@org_gonum_v1_plot//plotter",
        "@org_gonum_v1_plot//vg",
        "@org_gonum_v1_plot//vg/draw",
    ],
)

filegroup(
    name = "templates",
    srcs = glob(["templates/*.html"]),
)

# Create a copy of Bootstrap that only contains the style attributes
# used by the HTML templates. Also include the classes needed by
# terminal-to-html.
genrule(
    name = "stylesheet",
    srcs = [
        "@com_github_buildkite_terminal_to_html//assets:terminal.css",
        "@com_github_twbs_bootstrap//:css/bootstrap.min.css",
        ":templates",
    ],
    outs = ["stylesheet.css"],
    cmd = " && ".join([
        "$(location @npm//purgecss/bin:purgecss) --css $(location @com_github_twbs_bootstrap//:css/bootstrap.min.css) --content $(locations templates) --output $@ --safelist bg-secondary",
        "cat $(location @com_github_buildkite_terminal_to_html//assets:terminal.css) >> $@",
    ]),
    tools = ["@npm//purgecss/bin:purgecss"],
)

go_binary(
    name = "bb_browser",
    embed = [":bb_browser_lib"],
    pure = "on",
    visibility = ["//visibility:public"],
)

go_image(
    name = "bb_browser_container",
    embed = [":bb_browser_lib"],
    pure = "on",
    visibility = ["//visibility:public"],
)

container_push_official(
    name = "bb_browser_container_push",
    component = "bb-browser",
    image = ":bb_browser_container",
)
